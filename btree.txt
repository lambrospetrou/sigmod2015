rm: cannot remove ‘reference’: No such file or directory
make: *** [clean] Error 1
In file included from include/cpp_btree/btree_map.h:31:0,
                 from include/CIndex.hpp:15,
                 from reference.cpp:32:
include/cpp_btree/btree.h: In instantiation of ‘btree::btree_node<Params>::reference btree::btree_node<Params>::value(int) [with Params = btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256>; btree::btree_node<Params>::reference = std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >&]’:
include/cpp_btree/btree.h:809:12:   required from ‘btree::btree_iterator<Node, Reference, Pointer>::pointer btree::btree_iterator<Node, Reference, Pointer>::operator->() const [with Node = btree::btree_node<btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256> >; Reference = std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >&; Pointer = std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >*; btree::btree_iterator<Node, Reference, Pointer>::pointer = std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >*]’
include/CIndex.hpp:140:33:   required from here
include/cpp_btree/btree.h:557:57: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
     return reinterpret_cast<reference>(fields_.values[i]);
                                                         ^
include/cpp_btree/btree.h: In instantiation of ‘btree::btree_node<Params>::reference btree::btree_node<Params>::value(int) [with Params = btree::btree_map_params<unsigned int, std::pair<long unsigned int, long unsigned int*>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> > >, 256>; btree::btree_node<Params>::reference = std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> >&]’:
include/cpp_btree/btree.h:809:12:   required from ‘btree::btree_iterator<Node, Reference, Pointer>::pointer btree::btree_iterator<Node, Reference, Pointer>::operator->() const [with Node = btree::btree_node<btree::btree_map_params<unsigned int, std::pair<long unsigned int, long unsigned int*>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> > >, 256> >; Reference = std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> >&; Pointer = std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> >*; btree::btree_iterator<Node, Reference, Pointer>::pointer = std::pair<const unsigned int, std::pair<long unsigned int, long unsigned int*> >*]’
reference.cpp:786:48:   required from here
include/cpp_btree/btree.h:557:57: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
include/cpp_btree/btree.h: In instantiation of ‘btree::btree_node<Params>::const_reference btree::btree_node<Params>::value(int) const [with Params = btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256>; btree::btree_node<Params>::const_reference = const std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >&]’:
include/cpp_btree/btree.h:806:32:   required from ‘btree::btree_iterator<Node, Reference, Pointer>::reference btree::btree_iterator<Node, Reference, Pointer>::operator*() const [with Node = const btree::btree_node<btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256> >; Reference = const std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >&; Pointer = const std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >*; btree::btree_iterator<Node, Reference, Pointer>::reference = const std::pair<const long unsigned int, std::vector<CIndex::Meta_t> >&]’
include/cpp_btree/btree.h:1851:20:   required from ‘void btree::btree<Params>::assign(const self_type&) [with Params = btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256>; btree::btree<Params>::self_type = btree::btree<btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256> >]’
include/cpp_btree/btree.h:1109:13:   required from ‘btree::btree<Params>::self_type& btree::btree<Params>::operator=(const self_type&) [with Params = btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256>; btree::btree<Params>::self_type = btree::btree<btree::btree_map_params<long unsigned int, std::vector<CIndex::Meta_t>, std::less<long unsigned int>, std::allocator<std::pair<const long unsigned int, std::vector<CIndex::Meta_t> > >, 256> >]’
include/cpp_btree/btree_container.h:28:7:   required from ‘static _OI std::__copy_move<true, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = CIndex::Bucket*; _OI = CIndex::Bucket*]’
/usr/include/c++/4.9/bits/stl_algobase.h:396:70:   required from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = true; _II = CIndex::Bucket*; _OI = CIndex::Bucket*]’
/usr/include/c++/4.9/bits/stl_algobase.h:434:38:   required from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >; _OI = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >]’
/usr/include/c++/4.9/bits/stl_algobase.h:498:47:   required from ‘_OI std::move(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >; _OI = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >]’
/usr/include/c++/4.9/bits/vector.tcc:159:6:   required from ‘std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::iterator) [with _Tp = CIndex::Bucket; _Alloc = std::allocator<CIndex::Bucket>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = CIndex::Bucket*]’
/usr/include/c++/4.9/bits/stl_vector.h:1177:71:   required from ‘std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = CIndex::Bucket; _Alloc = std::allocator<CIndex::Bucket>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<CIndex::Bucket*, std::vector<CIndex::Bucket> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = CIndex::Bucket*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const CIndex::Bucket*, std::vector<CIndex::Bucket> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const CIndex::Bucket*]’
include/CIndex.hpp:339:77:   required from here
include/cpp_btree/btree.h:560:63: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
     return reinterpret_cast<const_reference>(fields_.values[i]);
                                                               ^
/usr/include/c++/4.9/bits/stl_algobase.h:760:7: note: loop vectorized
/usr/include/c++/4.9/bits/stl_algobase.h:760:7: note: loop peeled for vectorization to enhance alignment
/usr/include/c++/4.9/bits/stl_algobase.h:760:7: note: loop vectorized
/usr/include/c++/4.9/bits/stl_algobase.h:760:7: note: loop peeled for vectorization to enhance alignment
include/cpp_btree/btree.h:1645:5: note: loop vectorized
include/cpp_btree/btree.h:1645:5: note: loop versioned for vectorization because of possible aliasing
include/cpp_btree/btree.h:1645:5: note: loop peeled for vectorization to enhance alignment
reference.cpp:1020:5: note: loop vectorized
reference.cpp:1020:5: note: loop peeled for vectorization to enhance alignment
reference.cpp:385:53: note: loop vectorized
reference.cpp:379:43: note: loop vectorized
reference.cpp:379:43: note: loop peeled for vectorization to enhance alignment
reference.cpp:378:58: note: loop vectorized
reference.cpp:378:58: note: loop peeled for vectorization to enhance alignment
reference.cpp:375:69: note: loop vectorized
reference.cpp:697:13: note: loop vectorized
reference.cpp:697:13: note: loop versioned for vectorization because of possible aliasing
reference.cpp:697:13: note: loop peeled for vectorization to enhance alignment
reference.cpp:675:13: note: loop vectorized
reference.cpp:675:13: note: loop versioned for vectorization because of possible aliasing
reference.cpp:675:13: note: loop peeled for vectorization to enhance alignment
ColumnStruct: 64 RelTransLog: 64 RelationStruct: 64 CTransStruct: 16
read error
./run.sh: line 7: 16496 Aborted                 ${DIR}/src/reference "$NUM_THREADS"
